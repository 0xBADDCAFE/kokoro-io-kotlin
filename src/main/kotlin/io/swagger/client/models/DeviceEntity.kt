/**
* kokoro.io API document
* X-Access-Token ヘッダーにあなたのアカウントのAPIトークンを含めることでAPIへのアクセスを行うことが出来ます。APIトークンはウェブ管理画面の右上メニュー「アカウント情報 > API情報」から確認可能です。  ただし、 POST /api/v1/devices/ APIへのリクエスト時のみ、APIトークンではなくあなたのアカウント情報を用いて認証を行うことが出来ます。この場合、X-Access-TokenではなくX-Account-Token ヘッダーを使用し、その値にはアカウントのメールアドレスとパスワードをコロンで連結した文字列 \"[email]:[password]\" を Base64 エンコードしたものを指定してください。  また、このページ右上の「Your API token here」の欄にAPIトークンを入力し「Explore」ボタンをクリックすることで、このページの各API説明部分にある「Try it out!」ボタンから実際にAPIを呼び出すことが可能になります。この時、通常のAPI呼び出しと同様、アカウントへの操作が実際に行われますのでご注意ください。 
*
* OpenAPI spec version: 1.0.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package io.swagger.client.models

import io.swagger.client.models.AccessTokenEntity

/**
 * Delete a device
 * @param name デバイス名
 * @param kind デバイス種別
 * @param device_identifier デバイスを特定するための任意の一意の文字列
 * @param notification_identifier プッシュ通知を送るためのidentifier
 * @param subscribe_notification プッシュ通知を受け取りたいか
 * @param last_activity_at 最後にデバイスを使用した日時
 * @param push_registered プッシュ通知サービスに登録されているかどうか
 * @param access_token デバイス用アクセストークン
 */
data class DeviceEntity (
    /* デバイス名 */
    val name: kotlin.String? = null,
    /* デバイス種別 */
    val kind: DeviceEntity.Kind? = null,
    /* デバイスを特定するための任意の一意の文字列 */
    val device_identifier: kotlin.String? = null,
    /* プッシュ通知を送るためのidentifier */
    val notification_identifier: kotlin.String? = null,
    /* プッシュ通知を受け取りたいか */
    val subscribe_notification: kotlin.Boolean? = null,
    /* 最後にデバイスを使用した日時 */
    val last_activity_at: java.time.LocalDateTime? = null,
    /* プッシュ通知サービスに登録されているかどうか */
    val push_registered: kotlin.Boolean? = null,
    /* デバイス用アクセストークン */
    val access_token: AccessTokenEntity? = null
) {

    /**
    * デバイス種別
    * Values: unknown,ios,android,uwp,chrome,firefox,officialWeb
    */
    enum class Kind(val value: kotlin.Any){
    
        unknown("unknown"),
    
        ios("ios"),
    
        android("android"),
    
        uwp("uwp"),
    
        chrome("chrome"),
    
        firefox("firefox"),
    
        officialWeb("official_web");
    
    }

}

